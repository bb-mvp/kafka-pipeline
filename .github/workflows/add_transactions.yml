name: Add transactions
run-name: Add transactions (triggered by @${{ github.actor }})
on: workflow_dispatch

jobs:
  liquibase-action:
    runs-on: ubuntu-latest
    name: Add transactions
    env:
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
    steps:
      - uses: actions/checkout@v2
      
      - name: install Liquibase
        working-directory: ./bin
        run: |
          export LIQUIBASE_VERSION=4.16.1 && export LIQUIBASE_BUNDLE=liquibase-${LIQUIBASE_VERSION}.zip
          wget -q https://github.com/liquibase/liquibase/releases/download/v${LIQUIBASE_VERSION}/${LIQUIBASE_BUNDLE}
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
          unzip ${LIQUIBASE_BUNDLE}
          chmod +x liquibase
      
      - name: check liquibase install
        run: liquibase --version
      
      - name: Install Gauge
        uses: getgauge/setup-gauge@master
        with:
          gauge-version: master
          gauge-plugins: python, html-report, screenshot
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: run liquibase update
        env:
          LIQUIBASE_CLASSPATH: "bin/internal/lib/postgresql.jar"
          LIQUIBASE_HUB_MODE: "off"
          LIQUIBASE_STRICT: "true"
          LIQUIBASE_HEADLESS: "true"
          LIQUIBASE_CHANGELOG_FILE: "dbchangelog.xml"

        run: ./scripts/liquibase_update.sh

      - name: Add transactions via Gauge spec
        env:
          # Temporary workaround for https://github.com/getgauge/gauge-python/issues/256
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
        run: gauge run specs
